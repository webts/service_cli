{"version":3,"sources":["../../lib/utils/index.js"],"names":["start","up","stop","exec","require","multiArgs","defaults","__dirname","default","generateFiles","configs","compose","version","services","map","config","ports","port","cmd","split","c","join","paths","copy","p","resolvedPath","root","original","concat","volumes","replace","labels","proxyService","name","container_name","host","generated","push","kind","buildPath","JSON","stringify","render","toString","process","cwd","console","log","composeUp","yml","err","error","composeStop","composeStart","cloneDB","db","media","build","cfs","sync","nodir","ignore","filePath","obj","ext","toLowerCase","parent","content","parse","node_env","env","NODE_ENV","docker","service","logging","session","messageBus","src","deps","Array","isArray","prototype","apply","views","networks"],"mappings":"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","file":"index.js","sourcesContent":["import glob from 'glob';\r\nimport composeRunner from 'docker-compose';\r\nimport ejs from 'ejs';\r\n\r\nimport {promisify} from 'util';\r\nimport {readFileSync, realpathSync, writeFileSync} from 'fs';\r\nimport {dirname, extname, resolve} from 'path';\r\nimport {safeLoad, safeDump} from 'js-yaml';\r\n\r\nconst start = promisify(composeRunner.up);\r\nconst stop = promisify(composeRunner.stop);\r\nconst exec = promisify(require('child_process').exec, {multiArgs: true});\r\nlet defaults = require(__dirname + '/../config/Defaults').default;\r\n\r\n\r\nexport function generateFiles(configs) {\r\n    let compose = {\r\n        version: '2.1',\r\n        services: []\r\n    };\r\n\r\n    configs.map((config) => {\r\n\r\n        // if ('port' in config) {\r\n        //     config.expose = config.port.toString();\r\n        // }\r\n        if (!('ports' in config) && 'port' in config) {\r\n            config.ports = [`${config.port}:${config.port}`];\r\n        }\r\n\r\n        if (typeof config.cmd === 'string') {\r\n            //config.command = config.cmd;\r\n            config.cmd = config.cmd.split(/\\s+/).map((c) => `\"${c}\"`).join(',');\r\n        }\r\n\r\n        if ('copy' in config) {\r\n            let paths = config.copy\r\n                .map((p) => {\r\n                    return {resolvedPath: resolve(config.root, dirname(p)), original: dirname(p)}\r\n                })\r\n                .concat(\r\n                    {resolvedPath: resolve(config.root, './app.js'), original: './app.js'},\r\n                    {resolvedPath: resolve(config.root, './package.json'), original: './package.json'},\r\n                    {resolvedPath: resolve(config.root, './run.config.json'), original: './run.config.json'}\r\n                );\r\n\r\n            config.volumes = paths.map((p) => {\r\n                return `${realpathSync(p.resolvedPath)}:${p.original.replace('./', '/usr/src/app/')}`;\r\n            });\r\n\r\n            config.copy = paths.map((p) => {\r\n                return realpathSync(p.resolvedPath).replace(/\\\\/g, '/');\r\n            });\r\n        }\r\n\r\n        let labels = [\r\n            `${defaults.proxyService.name}.backend=${config.name}`,\r\n            `${defaults.proxyService.name}.frontend.rule=PathPrefix:/api/${config.name};PathStrip:/api`\r\n        ]\r\n\r\n        if(!('labels' in config)){\r\n            config.labels = labels;\r\n        }\r\n\r\n        config.volumes = config.volumes || [];\r\n        config.copy    = config.copy || [];\r\n\r\n        config.container_name = config.host || config.name || config.container_name;\r\n\r\n        //generate run config\r\n        config.generated = true;\r\n        compose.services.push(config);\r\n\r\n        if(config.kind === 'service') {\r\n\r\n            if (!('buildPath' in config)) {\r\n                config.buildPath = realpathSync(config.root).replace(/\\\\/g, '/');\r\n            }\r\n            //generate run config\r\n            writeFileSync(\r\n                resolve(config.buildPath, 'run.config.json'),\r\n                JSON.stringify(config, null, 4)\r\n            );\r\n            //generate Dockerfile\r\n            writeFileSync(\r\n                resolve(config.buildPath, 'Dockerfile'),\r\n                ejs.render(readFileSync(__dirname + '/../templates/_dockerfile.ejs').toString(), config)\r\n            );\r\n        }\r\n\r\n    });\r\n\r\n    writeFileSync(\r\n        resolve(process.cwd(), 'docker-compose.yml'),\r\n        ejs.render(readFileSync(__dirname + '/../templates/_docker_compose.ejs').toString(), compose)\r\n    );\r\n\r\n    writeFileSync(\r\n        resolve(process.cwd(), 'docker-compose.yml'),\r\n        readFileSync(resolve(process.cwd(), 'docker-compose.yml')).toString().replace(/^\\s*[\\r\\n]/gm,'')\r\n    );\r\n\r\n    console.log('docker-compose.yml generated');\r\n}\r\n\r\nexport async function composeUp(yml) {\r\n    try {\r\n        await start({cwd: process.cwd(), log: true});\r\n        console.log('docker containers started');\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nexport async function composeStop(yml) {\r\n    try {\r\n        await stop({cwd: process.cwd(), log: true});\r\n        console.log('docker containers stopped');\r\n    }\r\n    catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport async function composeStart(yml) {\r\n    try {\r\n        await exec('docker-compose start');\r\n        console.log('docker containers stopped');\r\n    }\r\n    catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport async function cloneDB(db, media) {\r\n    media = media || true;\r\n    try {\r\n        console.log('db cloning');\r\n        await exec(`docker-compose run --rm commander clone ${db} ${media}`);\r\n    }\r\n    catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport async function build(config) {\r\n    await exec('npm install');\r\n    await exec('npm build');\r\n}\r\n\r\nexport default () => {\r\n    const cfs = glob.sync('**/service.config.?(js|json|yml)', {\r\n        nodir: true,\r\n        ignore: ['**/node_modules/**', 'build/**', 'lib/**', 'src/**','dist/**']\r\n    });\r\n    return cfs\r\n        .map((filePath) => {\r\n            console.log('found at ' + filePath);\r\n            let obj = {kind: ''};\r\n\r\n            const ext = extname(filePath).toLowerCase();\r\n            const parent = dirname(filePath);\r\n            try {\r\n                if (ext === '.json') {\r\n                    let content = readFileSync(realpathSync(filePath));\r\n                    obj = JSON.parse(content);\r\n                }\r\n                else if (ext === '.yml') {\r\n                    obj = safeLoad(readFileSync(filePath), 'utf-8');\r\n                }\r\n                else if (ext === '.js') {\r\n                    obj = require(realpathSync('./' + filePath));\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n\r\n            obj.node_env = process.env.NODE_ENV || 'dev';\r\n            obj.root = parent;\r\n\r\n            return obj;\r\n        })\r\n        .map((config) => {\r\n            switch (config.kind) {\r\n                case \"service\": {\r\n                    config = Object.assign({}, defaults.docker.service, defaults.service, config);\r\n                    config = Object.assign(\r\n                        {\r\n                            db: Object.assign(defaults.db, {logging: defaults.logging}),\r\n                            session: Object.assign(defaults.session, {logging: defaults.logging}),\r\n                            messageBus: Object.assign(defaults.messageBus, {logging: defaults.logging}),\r\n                            logging: defaults.logging\r\n                        },\r\n                        config);\r\n\r\n                    config.copy = [];\r\n\r\n                    if ('deps' in config) {\r\n                        config.src = config.deps;\r\n                    }\r\n\r\n                    if ('src' in config) {\r\n                        if (Array.isArray(config.src))\r\n                            Array.prototype.push.apply(config.copy, config.src);\r\n                        else\r\n                            config.copy.push(config.src);\r\n                    }\r\n\r\n                    if ('views' in config) {\r\n                        if (Array.isArray(config.views))\r\n                            Array.prototype.push.apply(config.copy, config.views);\r\n                        else\r\n                            config.copy.push(config.views);\r\n                    }\r\n\r\n                    if('networks' in defaults && 'internal' in defaults.networks){\r\n                        config = Object.assign({networks: 'internal'}, config);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'proxy':\r\n                    config = Object.assign({}, defaults.docker.proxyService, defaults.proxyService, config);\r\n                    if('networks' in defaults && 'proxy' in defaults.networks){\r\n                        config = Object.assign({networks: 'proxy'}, config);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return config;\r\n        });\r\n}\r\n"]}