{"version":3,"sources":["../../lib/utils/generator.js"],"names":["configs","defaults","compose","version","services","forEach","config","cmd","command","split","map","c","join","labels","kind","buildPath","root","paths","copy","p","resolvedPath","path","dirname","original","concat","volumes","realRoot","replace","proxyService","name","port","console","log","JSON","stringify","ejs","render","__dirname","toString","fs","existsSync","pkg","cfg","length","container_name","host","generated","push","process","cwd"],"mappings":"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","sourcesContent":["import path, {resolve} from \"path\";\r\nimport ejs from \"ejs\";\r\nimport fs, {readFileSync, realpathSync, writeFileSync} from \"fs\";\r\n\r\nexport default(configs, defaults) => {\r\n    let compose = {\r\n        version: \"2.1\",\r\n        services: []\r\n    };\r\n    configs.forEach(config => {\r\n        // if (!('ports' in config) && 'port' in config) {     config.ports =\r\n        // [`${config.port}:${config.port}`]; }\r\n\r\n        if (typeof config.cmd === \"string\") {\r\n            config.command = config.cmd;\r\n            config.cmd = config\r\n                .cmd\r\n                .split(/\\s+/)\r\n                .map(c => `\"${c}\"`)\r\n                .join(\",\");\r\n        }\r\n\r\n        let labels = [];\r\n\r\n        if (config.kind === \"service\") {\r\n            if (!(\"buildPath\" in config)) {\r\n                config.buildPath = config.root; //realpathSync(config.root).replace(/\\\\/g, '/');\r\n            }\r\n\r\n            if (\"copy\" in config) {\r\n                let paths = config\r\n                    .copy\r\n                    .map(p => {\r\n                        return {\r\n                            resolvedPath: resolve(config.root, path.dirname(p)),\r\n                            original: path.dirname(p)\r\n                        };\r\n                    })\r\n                    .concat({\r\n                        resolvedPath: resolve(config.root, \"./app.config.js\"),\r\n                        original: \"./app.config.js\"\r\n                    }, {\r\n                        resolvedPath: resolve(config.root, \"./.babelrc\"),\r\n                        original: \"./.babelrc\"\r\n                    }, {\r\n                        resolvedPath: resolve(config.root, \"./app.js\"),\r\n                        original: \"./app.js\"\r\n                    }, {\r\n                        resolvedPath: resolve(config.root, \"./package.json\"),\r\n                        original: \"./package.json\"\r\n                    }, {\r\n                        resolvedPath: resolve(config.root, \"./package-lock.json\"),\r\n                        original: \"./package-lock.json\"\r\n                    }, {\r\n                        resolvedPath: resolve(config.root, \"./run.config.json\"),\r\n                        original: \"./run.config.json\"\r\n                    }, {\r\n                        resolvedPath: resolve(config.root, \"./node_modules\"),\r\n                        original: \"./node_modules\"\r\n                    });\r\n                if (!(\"volumes\" in config) || typeof config.volumes === 'undefined') \r\n                    config.volumes = [];\r\n                \r\n                const realRoot = realpathSync(config.root);\r\n                config.volumes = config\r\n                    .volumes\r\n                    .concat(paths.map(p => {\r\n                        return `./${path\r\n                            .join('./', config.root, p.original)\r\n                            .replace(/\\\\/g, '/')}:${p\r\n                            .original\r\n                            .replace(\"./\", \"/usr/src/app/\")\r\n                            .replace(config.root, \"/usr/src/app/\")\r\n                            .replace(realRoot, \"/usr/src/app/\")\r\n                            .replace(/\\.\\.\\//g, \"\")}`;\r\n                    }));\r\n\r\n                //config.volumes = [`./${config.root}:/usr/src/app`].concat(config.volumes);\r\n\r\n                config.copy = paths.map(p => {\r\n                    return p\r\n                        .original\r\n                        .replace(/\\\\/g, \"/\");\r\n                });\r\n            }\r\n            labels = [`${defaults.proxyService.name}.port=${config.port}`, `${defaults.proxyService.name}.backend=${config.name}`, `${defaults.proxyService.name}.frontend.rule=PathPrefix:/api/${config.name}`, `${defaults.proxyService.name}.frontend.priority=100`, `${defaults.proxyService.name}.frontend.entryPoints=http,https`];\r\n\r\n            console.log(\"writing config file \" + resolve(config.buildPath, \"run.config.json\"));\r\n            //generate run config\r\n            writeFileSync(resolve(config.buildPath, \"run.config.json\"), JSON.stringify(config, null, 4));\r\n            //generate Dockerfile\r\n            writeFileSync(resolve(config.buildPath, \"Dockerfile\"), ejs.render(readFileSync(__dirname + \"/../templates/_dockerfile.ejs\").toString(), config));\r\n\r\n            if (!fs.existsSync(`${config.buildPath}/package.json`)) {\r\n\r\n                let pkg = ejs.render(readFileSync(__dirname + \"/../templates/_package.json.ejs\").toString(), config);\r\n                let cfg = ejs.render(readFileSync(__dirname + \"/../templates/_app.config.ejs\").toString(), config);\r\n                writeFileSync(`${config.buildPath}/package.json`, pkg);\r\n                writeFileSync(`${config.buildPath}/app/src/handler.js`, readFileSync(__dirname + \"/../templates/_handler.ejs\").toString());\r\n                writeFileSync(`${config.buildPath}/app.config.js`, cfg);\r\n                writeFileSync(`${config.buildPath}/app.js`, readFileSync(__dirname + \"/../templates/app.js.ejs\").toString());\r\n                writeFileSync(`${config.buildPath}/.babelrc`, readFileSync(__dirname + \"/../templates/babelrc.ejs\").toString());\r\n                writeFileSync(`${config.buildPath}/.dockerignore`, readFileSync(__dirname + \"/../templates/_dockerignore.ejs\").toString());\r\n            }\r\n\r\n            if (!fs.existsSync(`${config.buildPath}/app.test.js`)) {\r\n                writeFileSync(`${config.buildPath}/app.test.js`, readFileSync(__dirname + \"/../templates/app.test.js.ejs\").toString());\r\n            }\r\n\r\n        }\r\n\r\n        if (!(\"labels\" in config) && labels.length > 0) {\r\n            config.labels = labels;\r\n        }\r\n\r\n        config.volumes = config.volumes || [];\r\n        config.copy = config.copy || [];\r\n\r\n        config.container_name = config.host || config.name || config.container_name;\r\n\r\n        //generate run config\r\n        config.generated = true;\r\n        compose\r\n            .services\r\n            .push(config);\r\n    });\r\n\r\n    writeFileSync(resolve(process.cwd(), \"docker-compose.yml\"), ejs.render(readFileSync(__dirname + \"/../templates/_docker_compose.ejs\").toString(), compose));\r\n\r\n    writeFileSync(resolve(process.cwd(), \"docker-compose.yml\"), readFileSync(resolve(process.cwd(), \"docker-compose.yml\")).toString().replace(/^\\s*[\\r\\n]/gm, \"\"));\r\n\r\n    console.log(\"docker-compose.yml generated\");\r\n};\r\n"],"file":"generator.js"}