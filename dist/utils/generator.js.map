{"version":3,"sources":["../../lib/utils/generator.js"],"names":["configs","defaults","compose","version","services","forEach","config","cmd","command","split","map","c","join","labels","kind","buildPath","root","paths","copy","p","resolvedPath","dirname","original","concat","volumes","realRoot","replace","proxyService","name","port","console","log","JSON","stringify","render","__dirname","toString","existsSync","pkg","cfg","length","container_name","host","generated","push","process","cwd"],"mappings":"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","file":"generator.js","sourcesContent":["import path, {resolve} from \"path\";\r\nimport ejs from \"ejs\";\r\nimport fs, {readFileSync, realpathSync, writeFileSync} from \"fs\";\r\n\r\nexport default (configs, defaults) => {\r\n  let compose = {\r\n    version: \"2.1\",\r\n    services: []\r\n  };\r\n  configs.forEach(config => {\r\n    // if (!('ports' in config) && 'port' in config) {\r\n    //     config.ports = [`${config.port}:${config.port}`];\r\n    // }\r\n    \r\n    if (typeof config.cmd === \"string\")\r\n    {\r\n      config.command = config.cmd;\r\n      config.cmd     = config.cmd\r\n          .split(/\\s+/)\r\n          .map(c => `\"${c}\"`)\r\n          .join(\",\");\r\n    }\r\n    \r\n    let labels = [];\r\n    \r\n    if (config.kind === \"service\")\r\n    {\r\n      if (!(\"buildPath\" in config))\r\n      {\r\n        config.buildPath = config.root; //realpathSync(config.root).replace(/\\\\/g, '/');\r\n      }\r\n      \r\n      if (\"copy\" in config)\r\n      {\r\n        let paths = config.copy\r\n            .map(p => {\r\n              return {\r\n                resolvedPath: resolve(config.root, path.dirname(p)),\r\n                original: path.dirname(p)\r\n              };\r\n            })\r\n            .concat(\r\n                {\r\n                  resolvedPath: resolve(config.root, \"./app.config.js\"),\r\n                  original: \"./app.config.js\"\r\n                },\r\n                {\r\n                  resolvedPath: resolve(config.root, \"./.babelrc\"),\r\n                  original: \"./.babelrc\"\r\n                },\r\n                {\r\n                  resolvedPath: resolve(config.root, \"./app.js\"),\r\n                  original: \"./app.js\"\r\n                },\r\n                {\r\n                  resolvedPath: resolve(config.root, \"./package.json\"),\r\n                  original: \"./package.json\"\r\n                },\r\n                {\r\n                  resolvedPath: resolve(config.root, \"./package-lock.json\"),\r\n                  original: \"./package-lock.json\"\r\n                },\r\n                {\r\n                  resolvedPath: resolve(config.root, \"./run.config.json\"),\r\n                  original: \"./run.config.json\"\r\n                }\r\n            );\r\n        if (!(\"volumes\" in config) || typeof config.volumes === 'undefined') config.volumes = [];\r\n        \r\n        const realRoot = realpathSync(config.root);\r\n        config.volumes = config.volumes.concat(\r\n            paths.map(p => {\r\n              return `./${path.join('./', config.root, p.original).replace(/\\\\/g, '/')}:${p.original.replace(\r\n                  \"./\",\r\n                  \"/usr/src/app/\"\r\n              ).replace(\r\n                  config.root,\r\n                  \"/usr/src/app/\"\r\n              ).replace(\r\n                  realRoot,\r\n                  \"/usr/src/app/\"\r\n              ).replace(\r\n                  /\\.\\.\\//g,\r\n                  \"\"\r\n              )}`;\r\n            })\r\n        );\r\n        \r\n        //config.volumes = [`./${config.root}:/usr/src/app`].concat(config.volumes);\r\n        \r\n        config.copy = paths.map(p => {\r\n          return p.original.replace(/\\\\/g, \"/\");\r\n        });\r\n      }\r\n      labels = [\r\n        `${defaults.proxyService.name}.port=${config.port}`,\r\n        `${defaults.proxyService.name}.backend=${config.name}`,\r\n        `${defaults.proxyService.name}.frontend.rule=PathPrefix:/api/${config.name}`,\r\n        `${defaults.proxyService.name}.frontend.priority=100`,\r\n        `${defaults.proxyService.name}.frontend.entryPoints=http,https`\r\n      ];\r\n      \r\n      console.log(\r\n          \"writing config file \" + resolve(config.buildPath, \"run.config.json\")\r\n      );\r\n      //generate run config\r\n      writeFileSync(\r\n          resolve(config.buildPath, \"run.config.json\"),\r\n          JSON.stringify(config, null, 4)\r\n      );\r\n      //generate Dockerfile\r\n      writeFileSync(\r\n          resolve(config.buildPath, \"Dockerfile\"),\r\n          ejs.render(\r\n              readFileSync(__dirname + \"/../templates/_dockerfile.ejs\").toString(),\r\n              config\r\n          )\r\n      );\r\n      \r\n      if (!fs.existsSync(`${config.buildPath}/package.json`))\r\n      {\r\n  \r\n        let pkg = ejs.render(\r\n            readFileSync(__dirname + \"/../templates/_package.json.ejs\").toString(),\r\n            config\r\n        );\r\n        let cfg = ejs.render(\r\n            readFileSync(__dirname + \"/../templates/_app.config.ejs\").toString(),\r\n            config\r\n        );\r\n        writeFileSync(`${config.buildPath}/package.json`, pkg);\r\n        writeFileSync(\r\n            `${config.buildPath}/app/src/handler.js`,\r\n            readFileSync(__dirname + \"/../templates/_handler.ejs\").toString()\r\n        );\r\n        writeFileSync(`${config.buildPath}/app.config.js`, cfg);\r\n        writeFileSync(\r\n            `${config.buildPath}/app.js`,\r\n            readFileSync(__dirname + \"/../templates/app.js.ejs\").toString()\r\n        );\r\n        writeFileSync(\r\n            `${config.buildPath}/.babelrc`,\r\n            readFileSync(__dirname + \"/../templates/babelrc.ejs\").toString()\r\n        );\r\n        writeFileSync(\r\n            `${config.buildPath}/.dockerignore`,\r\n            readFileSync(__dirname + \"/../templates/_dockerignore.ejs\").toString()\r\n        );\r\n      }\r\n      \r\n      if (!fs.existsSync(`${config.buildPath}/app.test.js`))\r\n      {\r\n        writeFileSync(\r\n            `${config.buildPath}/app.test.js`,\r\n            readFileSync(__dirname + \"/../templates/app.test.js.ejs\").toString()\r\n        );\r\n      }\r\n      \r\n    }\r\n    \r\n    if (!(\"labels\" in config) && labels.length > 0)\r\n    {\r\n      config.labels = labels;\r\n    }\r\n    \r\n    config.volumes = config.volumes || [];\r\n    config.copy    = config.copy || [];\r\n    \r\n    config.container_name = config.host || config.name || config.container_name;\r\n    \r\n    //generate run config\r\n    config.generated = true;\r\n    compose.services.push(config);\r\n  });\r\n  \r\n  writeFileSync(\r\n      resolve(process.cwd(), \"docker-compose.yml\"),\r\n      ejs.render(\r\n          readFileSync(__dirname + \"/../templates/_docker_compose.ejs\").toString(),\r\n          compose\r\n      )\r\n  );\r\n  \r\n  writeFileSync(\r\n      resolve(process.cwd(), \"docker-compose.yml\"),\r\n      readFileSync(resolve(process.cwd(), \"docker-compose.yml\"))\r\n          .toString()\r\n          .replace(/^\\s*[\\r\\n]/gm, \"\")\r\n  );\r\n  \r\n  console.log(\"docker-compose.yml generated\");\r\n};\r\n"]}