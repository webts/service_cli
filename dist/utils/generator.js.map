{"version":3,"sources":["../../lib/utils/generator.js"],"names":["configs","defaults","compose","version","services","forEach","config","cmd","command","split","map","c","join","labels","kind","buildPath","root","paths","copy","p","resolvedPath","dirname","original","concat","volumes","realRoot","replace","proxyService","name","port","console","log","JSON","stringify","render","__dirname","toString","pkg","cfg","length","container_name","host","generated","push","process","cwd"],"mappings":"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","file":"generator.js","sourcesContent":["import path, { resolve } from \"path\";\r\nimport ejs from \"ejs\";\r\nimport { readFileSync, realpathSync, writeFileSync } from \"fs\";\r\n\r\nexport default (configs, defaults) => {\r\n  let compose = {\r\n    version: \"2.1\",\r\n    services: []\r\n  };\r\n  configs.forEach(config => {\r\n    // if (!('ports' in config) && 'port' in config) {\r\n    //     config.ports = [`${config.port}:${config.port}`];\r\n    // }\r\n\r\n    if (typeof config.cmd === \"string\") {\r\n      config.command = config.cmd;\r\n      config.cmd = config.cmd\r\n        .split(/\\s+/)\r\n        .map(c => `\"${c}\"`)\r\n        .join(\",\");\r\n    }\r\n\r\n    let labels = [];\r\n\r\n    if (config.kind === \"service\") {\r\n      if (!(\"buildPath\" in config)) {\r\n        config.buildPath = config.root; //realpathSync(config.root).replace(/\\\\/g, '/');\r\n      }\r\n\r\n      if (\"copy\" in config) {\r\n        let paths = config.copy\r\n          .map(p => {\r\n            return {\r\n              resolvedPath: resolve(config.root, path.dirname(p)),\r\n              original: path.dirname(p)\r\n            };\r\n          })\r\n          .concat(\r\n            {\r\n              resolvedPath: resolve(config.root, \"./app.config.js\"),\r\n              original: \"./app.config.js\"\r\n            },\r\n            {\r\n              resolvedPath: resolve(config.root, \"./.babelrc\"),\r\n              original: \"./.babelrc\"\r\n            },\r\n            {\r\n              resolvedPath: resolve(config.root, \"./app.js\"),\r\n              original: \"./app.js\"\r\n            },\r\n            {\r\n              resolvedPath: resolve(config.root, \"./package.json\"),\r\n              original: \"./package.json\"\r\n            },\r\n            {\r\n              resolvedPath: resolve(config.root, \"./package-lock.json\"),\r\n              original: \"./package-lock.json\"\r\n            },\r\n            {\r\n              resolvedPath: resolve(config.root, \"./run.config.json\"),\r\n              original: \"./run.config.json\"\r\n            }\r\n          );\r\n        if (!(\"volumes\" in config) || typeof config.volumes === 'undefined') config.volumes = [];\r\n\r\n        const realRoot = realpathSync(config.root);\r\n        config.volumes = config.volumes.concat(\r\n          paths.map(p => {\r\n            return `./${path.join('./',config.root, p.original).replace(/\\\\/g,'/')}:${p.original.replace(\r\n                \"./\",\r\n                \"/usr/src/app/\"\r\n            ).replace(\r\n                config.root,\r\n                \"/usr/src/app/\"  \r\n            ).replace(\r\n                realRoot,\r\n                \"/usr/src/app/\"  \r\n            ).replace(\r\n                /\\.\\.\\//g,\r\n                \"\"\r\n            )}`;\r\n          })\r\n        );\r\n\r\n        //config.volumes = [`./${config.root}:/usr/src/app`].concat(config.volumes);\r\n\r\n        config.copy = paths.map(p => {\r\n          return p.original.replace(/\\\\/g, \"/\");\r\n        });\r\n      }\r\n      labels = [\r\n        `${defaults.proxyService.name}.port=${config.port}`,\r\n        `${defaults.proxyService.name}.backend=${config.name}`,\r\n        `${defaults.proxyService.name}.frontend.rule=PathPrefix: /api/${config.name}`,\r\n        `${defaults.proxyService.name}.frontend.priority=100`,\r\n        `${defaults.proxyService.name}.frontend.passHostHeader=true`,\r\n        `${defaults.proxyService.name}.protocol=http,https`\r\n      ];\r\n\r\n      console.log(\r\n        \"writing config file \" + resolve(config.buildPath, \"run.config.json\")\r\n      );\r\n      //generate run config\r\n      writeFileSync(\r\n        resolve(config.buildPath, \"run.config.json\"),\r\n        JSON.stringify(config, null, 4)\r\n      );\r\n      //generate Dockerfile\r\n      writeFileSync(\r\n        resolve(config.buildPath, \"Dockerfile\"),\r\n        ejs.render(\r\n          readFileSync(__dirname + \"/../templates/_dockerfile.ejs\").toString(),\r\n          config\r\n        )\r\n      );\r\n\r\n      let pkg = ejs.render(\r\n        readFileSync(__dirname + \"/../templates/_package.json.ejs\").toString(),\r\n        config\r\n      );\r\n      let cfg = ejs.render(\r\n        readFileSync(__dirname + \"/../templates/_app.config.ejs\").toString(),\r\n        config\r\n      );\r\n      writeFileSync(`${config.buildPath}/package.json`, pkg);\r\n      writeFileSync(`${config.buildPath}/app.config.js`, cfg);\r\n      writeFileSync(\r\n        `${config.buildPath}/app.js`,\r\n        readFileSync(__dirname + \"/../templates/app.js.ejs\").toString()\r\n      );\r\n      writeFileSync(\r\n        `${config.buildPath}/app/src/handler.js`,\r\n        readFileSync(__dirname + \"/../templates/_handler.ejs\").toString()\r\n      );\r\n      writeFileSync(\r\n        `${config.buildPath}/.babelrc`,\r\n        readFileSync(__dirname + \"/../templates/babelrc.ejs\").toString()\r\n      );\r\n    \r\n      writeFileSync(\r\n        `${config.buildPath}/.dockerignore`,\r\n        readFileSync(__dirname + \"/../templates/_dockerignore.ejs\").toString()\r\n      );\r\n    }\r\n\r\n    if (!(\"labels\" in config) && labels.length > 0) {\r\n      config.labels = labels;\r\n    }\r\n\r\n    config.volumes = config.volumes || [];\r\n    config.copy = config.copy || [];\r\n\r\n    config.container_name = config.host || config.name || config.container_name;\r\n\r\n    //generate run config\r\n    config.generated = true;\r\n    compose.services.push(config);\r\n  });\r\n\r\n  writeFileSync(\r\n    resolve(process.cwd(), \"docker-compose.yml\"),\r\n    ejs.render(\r\n      readFileSync(__dirname + \"/../templates/_docker_compose.ejs\").toString(),\r\n      compose\r\n    )\r\n  );\r\n\r\n  writeFileSync(\r\n    resolve(process.cwd(), \"docker-compose.yml\"),\r\n    readFileSync(resolve(process.cwd(), \"docker-compose.yml\"))\r\n      .toString()\r\n      .replace(/^\\s*[\\r\\n]/gm, \"\")\r\n  );\r\n\r\n  console.log(\"docker-compose.yml generated\");\r\n};\r\n"]}