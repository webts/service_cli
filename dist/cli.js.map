{"version":3,"sources":["../lib/cli.js"],"names":["defaults","require","__dirname","default","__esModule","args","version","name","description","command","action","defs","fs","existsSync","path","resolve","process","cwd","yaml","safeLoad","unlinkSync","writeFileSync","JSON","stringify","console","log","configs","cmd","filter","cf","kind","map","join","option","generateOnly","Promise","all","then","configFile","endsWith","parse","readFileSync","toString","root","dirname","err","error","db","media","serviceName","startDir","mkdirSync","servicePath","config","src","npm","safeDump","indent","argv"],"mappings":"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","sourcesContent":["#!/usr/bin/env \r\n\r\nimport args from 'commander';\r\nimport getConfigs, {\r\n    build,\r\n    cloneDB,\r\n    composeStart,\r\n    composeStop,\r\n    composeUp,\r\n    generate\r\n} from './utils/index';\r\nimport fs from 'fs';\r\nimport ejs from 'ejs';\r\nimport yaml from 'js-yaml';\r\nimport path from 'path';\r\nimport {exec} from 'child_process';\r\nlet defaults = require(__dirname + '/config/Defaults').default;\r\ndelete defaults.__esModule;\r\n\r\nargs\r\n    .version('0.1.0')\r\n    .name('service_cli')\r\n    .description('Micro-webservice CLI');\r\n\r\nargs\r\n    .command('init')\r\n    .description('initiate default configuration')\r\n    .action(function () {\r\n        let defs = defaults;\r\n\r\n        if (fs.existsSync(path.resolve(process.cwd(), 'defaults.yml'))) {\r\n            defs = yaml.safeLoad(path.resolve(process.cwd(), 'defaults.yml'));\r\n            fs.unlinkSync(path.resolve(process.cwd(), 'defaults.yml'));\r\n        }\r\n\r\n        fs.writeFileSync(path.resolve(process.cwd(), 'defaults.js'), 'module.exports = \\n' + JSON.stringify(defs, null, 4) + ';');\r\n        console.log('defaults.js created');\r\n\r\n    });\r\n\r\nargs\r\n    .command(\"clean\")\r\n    .description('remove all service images')\r\n    .action(async function () {\r\n        let configs = getConfigs();\r\n        const cmd = 'docker rm ' + configs.filter((cf) => cf.kind === 'service').map((cf) => cf.name).join(' ');\r\n        console.log('remove all service containers \"' + cmd + '\"');\r\n        await exec(cmd);\r\n    });\r\n\r\nargs\r\n    .command(\"build\")\r\n    .description('generate docker files and docker compose')\r\n    .option('-g, --generateOnly', 'generate Dockerfiles without building images')\r\n    .action(async function (command) {\r\n        console.log('building...' + command.generateOnly);\r\n        let configs = getConfigs();\r\n\r\n        generate(configs, defaults);\r\n        if (!command.generateOnly) {\r\n            await(async() => {\r\n                const cmd = 'docker rm ' + configs.filter((cf) => cf.kind === 'service').map((cf) => cf.name).join(' ');\r\n                console.log('remove all service containes \"' + cmd + '\"');\r\n                await exec(cmd);\r\n            })();\r\n\r\n            Promise.all(configs.map(async(cf) => await exec(\"npm i && npm run build\"))).then(() => composeUp().then(() => console.log('build done')));\r\n        } else \r\n            console.log('build done');\r\n        }\r\n    );\r\n\r\nargs\r\n    .command('run <configFile>')\r\n    .description('run the service with configuration')\r\n    .action(function (configFile) {\r\n        if (typeof configFile === 'undefined') \r\n            configFile = './run.config.json';\r\n        if (!configFile.endsWith('.json')) {}\r\n        if (configFile === './') \r\n            configFile = './run.config.json';\r\n        \r\n        if (fs.existsSync(configFile)) {\r\n            try {\r\n                const cf = JSON.parse(fs.readFileSync(configFile).toString());\r\n                if (!('root' in cf)) \r\n                    cf.root = path.dirname(configFile);\r\n                build(cf).then(() => {\r\n                    exec(\"yarn start\", {cwd: cf.root});\r\n                });\r\n\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        } else {\r\n            console.log('Configuration file does not exist');\r\n        }\r\n    });\r\n\r\nargs\r\n    .command('stop')\r\n    .description('stop all docker services')\r\n    .action(function () {\r\n        composeStop().then(() => console.log('all stopped'));\r\n    });\r\n\r\nargs\r\n    .command('start')\r\n    .description('start all docker services')\r\n    .action(function () {\r\n        composeStart().then(() => console.log('all started'));\r\n    });\r\n\r\nargs\r\n    .command('clone db media')\r\n    .description('clone db with media')\r\n    .action(function (db, media) {\r\n        cloneDB(db, media);\r\n    });\r\n\r\nargs\r\n    .command('create <serviceName> [startDir]')\r\n    .description('create a service folder. must be run from parent project root')\r\n    .action(function (serviceName, startDir) {\r\n        startDir = startDir || path.resolve(process.cwd(), 'services/');\r\n\r\n        if (!fs.existsSync(startDir)) \r\n            fs.mkdirSync(startDir);\r\n        \r\n        if (fs.existsSync(path.resolve(startDir, serviceName))) {\r\n            console.log('service already exists');\r\n        } else {\r\n            const servicePath = path.resolve(startDir, serviceName);\r\n            const kind = serviceName === 'proxy'\r\n                ? 'proxy'\r\n                : 'service';\r\n            let config = {\r\n                kind,\r\n                name: serviceName,\r\n                src: ['./app/src/*.js'],\r\n                npm: []\r\n            };\r\n\r\n            fs.mkdirSync(`${servicePath}`);\r\n            fs.mkdirSync(`${servicePath}/app/`);\r\n            fs.mkdirSync(`${servicePath}/app/src`);\r\n\r\n            fs.writeFileSync(`${servicePath}/service.config.yml`, yaml.safeDump(config, {indent: 4}));\r\n\r\n            console.log('You can use git submodule to init git for ' + serviceName + '/');\r\n        }\r\n\r\n    });\r\n\r\nargs.parse(process.argv);\r\n"],"file":"cli.js"}