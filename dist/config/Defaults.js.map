{"version":3,"sources":["../../lib/config/Defaults.js"],"names":["defFiles","sync","realpath","defFile","defaults","extname","safeLoad","readFileSync","err","console","error","JSON","parse","require","proxy","docker","messageBus","session","service","db","logging"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;eAGe,CAAC,MAAM;AAClB,MAAIA,WAAW,cAAKC,IAAL,CACX,8CADW,EAEX;AACIC,cAAU;AADd,GAFW,CAAf;;AAMA,MAAIC,UAAUH,SAAS,CAAT,CAAd;AACA,MAAII,WAAW,EAAf;;AACA,MAAI,cAAKC,OAAL,CAAaF,OAAb,MAA0B,MAA9B,EAAsC;AAClC,QAAI;AACAC,iBAAW,gBAAIE,QAAJ,CAAa,YAAGC,YAAH,CAAgBJ,OAAhB,EAAyB,OAAzB,CAAb,CAAX;AACH,KAFD,CAGA,OAAOK,GAAP,EAAY;AACRC,cAAQC,KAAR,CAAcF,GAAd;AACH;AACJ,GAPD,MAQK,IAAI,cAAKH,OAAL,CAAaF,OAAb,MAA0B,OAA9B,EAAuC;AACxC,QAAI;AACAC,iBAAWO,KAAKC,KAAL,CAAW,YAAGL,YAAH,CAAgBJ,OAAhB,EAAyB,OAAzB,CAAX,CAAX;AACH,KAFD,CAGA,OAAOK,GAAP,EAAY;AACRC,cAAQC,KAAR,CAAcF,GAAd;AACH;AACJ,GAPI,MAQA,IAAI,cAAKH,OAAL,CAAaF,OAAb,MAA0B,KAA9B,EAAqC;AACtCC,eAAWS,QAAQV,OAAR,CAAX;AACH;;AAGD,MAAIC,QAAJ,EAAc;AACVA,eAAW,SAAc,EAAd,EAAkBA,QAAlB,CAAX;;AACA,QAAIU,QAASD,QAAQ,cAAR,CAAb;AAAA,QACIE,SAAUF,QAAQ,eAAR,CADd;AAAA,QAEIG,aAAcH,QAAQ,mBAAR,CAFlB;AAAA,QAGII,UAAWJ,QAAQ,gBAAR,CAHf;AAAA,QAIIK,UAAWL,QAAQ,gBAAR,CAJf;AAAA,QAKIM,KAAMN,QAAQ,WAAR,CALV;AAAA,QAMIO,UAAWP,QAAQ,gBAAR,CANf;;AAUAM,SAAK,SAAc,EAAd,EAAkBA,EAAlB,EAAsBC,OAAtB,CAAL;AACAJ,iBAAa,SAAc,EAAd,EAAkBA,UAAlB,CAAb;AAEAC,cAAU,SAAc,EAAd,EAAkBA,OAAlB,CAAV;AAEAH,YAAQ,SAAc,EAAd,EAAkBA,KAAlB,CAAR;AAEAI,cAAU,SAAc,EAAd,EAAkBA,OAAlB,CAAV;AAEAd,eAAW,SAAc,EAAd,EAAkBW,MAAlB,EAA0BI,EAA1B,EAA8BF,OAA9B,EAAuCD,UAAvC,EAAmDF,KAAnD,EAA0DI,OAA1D,EAAmEd,QAAnE,CAAX;AAEH;;AAED,SAAOA,QAAP;AACH,CAxDc,G","file":"Defaults.js","sourcesContent":["import glob from 'glob';\r\nimport path from 'path';\r\nimport yml from 'js-yaml';\r\nimport fs from 'fs';\r\n\r\n\r\nexport default (() => {\r\n    let defFiles = glob.sync(\r\n        '**/+(config|defaults|default).+(js|json|yml)',\r\n        {\r\n            realpath: true\r\n        }\r\n    );\r\n    let defFile = defFiles[0];\r\n    let defaults = {};\r\n    if (path.extname(defFile) === '.yml') {\r\n        try {\r\n            defaults = yml.safeLoad(fs.readFileSync(defFile, 'utf-8'));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else if (path.extname(defFile) === '.json') {\r\n        try {\r\n            defaults = JSON.parse(fs.readFileSync(defFile, 'utf-8'));\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else if (path.extname(defFile) === '.js') {\r\n        defaults = require(defFile);\r\n    }\r\n\r\n\r\n    if (defaults) {\r\n        defaults = Object.assign({}, defaults);\r\n        let proxy = (require('./proxy.json')),\r\n            docker = (require('./docker.json')),\r\n            messageBus = (require('./messageBus.json')),\r\n            session = (require('./session.json')),\r\n            service = (require('./service.json')),\r\n            db = (require('./db.json')),\r\n            logging = (require('./logging.json'))\r\n        ;\r\n\r\n\r\n        db = Object.assign({}, db, logging);\r\n        messageBus = Object.assign({}, messageBus);\r\n\r\n        session = Object.assign({}, session);\r\n\r\n        proxy = Object.assign({}, proxy);\r\n\r\n        service = Object.assign({}, service);\r\n\r\n        defaults = Object.assign({}, docker, db, session, messageBus, proxy, service, defaults);\r\n\r\n    }\r\n\r\n    return defaults;\r\n})();"]}