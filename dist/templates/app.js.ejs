var fs = require('fs');
var child_process = require('child_process');

var configFile = './run.config.json';

if (fs.existsSync(configFile)) {
    try {
        const cf = JSON.parse(fs.readFileSync(configFile).toString());
        cf.root = './build/';
        if(process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'dev'){
            cf.session.host    = 'localhost';
            cf.messageBus.host = 'localhost';
            cf.db.host         = 'localhost';
            cf.port            = 3030;
        }

        const factory = require('mwservice').ServiceFactory;

        let runner = function () {
            factory
                .buildService(cf)
                .then(function (service) {
                    if (service !== null) {
                        service.start();
                    } else {
                        console.error("invalid service class");
                    }
                })
                .catch(function (err) {
                    console.error(err);
                });
        }

        if (!fs.existsSync(cf.root)) {
            child_process
                .exec('yarn build', function (err, stdout, stderr) {
                    runner();
                });
        } else {
            runner();
        }

        // });

    } catch (err) {
        console.error(err);
    }
} else {
    console.log('Configuration file not exists');
}